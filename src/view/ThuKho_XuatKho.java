/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import dao.ChiTietKhoHang_DAO;
import dao.Sach_DAO;
import entity.Sach;

import java.awt.Font;
import java.sql.SQLException;
import javax.swing.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;


/**
 *
 * @author Thế Bảo
 */
public class ThuKho_XuatKho extends javax.swing.JInternalFrame {
    private ChiTietKhoHang_DAO ct_khoHang_dao;
    private Sach_DAO sach_dao;
    /**
     * Creates new form TrangNhapKho
     */
    public ThuKho_XuatKho() {
        initComponents();

        ct_khoHang_dao = new ChiTietKhoHang_DAO();
        sach_dao = new Sach_DAO();
    
    // Sử dụng SwingUtilities.invokeLater để đảm bảo các thay đổi giao diện được thực hiện trên EDT
        SwingUtilities.invokeLater(() -> {
            this.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
            BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
            ui.setNorthPane(null);
        });

        canGiua_tableHeader();
        chinhSua_table();
    }

    public void nhapThongTin() {

    }

    private boolean kiemTraISBNvaSoLuong(String isbn, String soLuongStr) {
        // Kiểm tra mã sách
        try {
            Sach sach = sach_dao.getSachTheoMaSach(isbn);
            if (sach == null) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy mã sách: " + isbn);
                return false; // Mã sách không tồn tại
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi truy vấn mã sách: " + e.getMessage());
            return false;
        }

        // Kiểm tra số lượng
        int soLuong;
        try {
            soLuong = Integer.parseInt(soLuongStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Số lượng không hợp lệ. Vui lòng nhập một số nguyên.");
            return false; // Không phải là số nguyên
        }

        // Kiểm tra số lượng âm hoặc bằng 0
        if (soLuong <= 0) {
            JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0.");
            return false; // Số lượng âm hoặc bằng 0
        }

        return true; // Dữ liệu hợp lệ
    }

    public void chinhSua_table() {
        //Căn giữa các giá trị cột STT trong table
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        centerRenderer.setVerticalAlignment(JLabel.CENTER );
        tbl_phieuXuatKho.getColumnModel().getColumn(0).setCellRenderer( centerRenderer);

        // Thiết lập kích thước font cho các phần tử trong table
        Font font = new Font("Arial", Font.PLAIN, 18);
        tbl_phieuXuatKho.setFont(font);

        // Chỉnh kích thước cột
        tbl_phieuXuatKho.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbl_phieuXuatKho.getColumnModel().getColumn(1).setPreferredWidth(100);
        tbl_phieuXuatKho.getColumnModel().getColumn(2).setPreferredWidth(250);
        tbl_phieuXuatKho.getColumnModel().getColumn(3).setPreferredWidth(150);
        tbl_phieuXuatKho.getColumnModel().getColumn(4).setPreferredWidth(100);
        tbl_phieuXuatKho.getColumnModel().getColumn(5).setPreferredWidth(100);
        tbl_phieuXuatKho.getColumnModel().getColumn(6).setPreferredWidth(100);
        tbl_phieuXuatKho.getColumnModel().getColumn(7).setPreferredWidth(100);
    }
    
    public void canGiua_tableHeader() {
    // Căn giữa và chỉnh kích thước table header
        Font fn = new Font("Arial", Font.BOLD, 18);
        tbl_phieuXuatKho.getTableHeader().setFont(fn);
        
        // Lấy header của bảng
        JTableHeader header = tbl_phieuXuatKho.getTableHeader();
        
        // Tạo renderer để căn giữa header
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) header.getDefaultRenderer();
        renderer.setHorizontalAlignment(JLabel.CENTER);

        // Thiết lập renderer cho header
        header.setDefaultRenderer(renderer);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_tuKho = new javax.swing.JTextField();
        tf_denKho = new javax.swing.JTextField();
        jdc_ngayLapPX = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tf_isbn = new javax.swing.JTextField();
        tf_soLuong = new javax.swing.JTextField();
        btn_them = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        btn_taoPX = new javax.swing.JButton();
        btn_huy = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_phieuXuatKho = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(1612, 733));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1612, 733));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Thông tin");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 90, 140, 36);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Từ kho");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(110, 210, 80, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("(*)");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(190, 150, 30, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Đến kho");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(100, 270, 80, 40);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("(*)");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(190, 210, 24, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Ngày lập phiếu");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(40, 150, 150, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("(*)");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(190, 270, 30, 40);

        tf_tuKho.setPreferredSize(new java.awt.Dimension(64, 40));
        tf_tuKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_tuKhoActionPerformed(evt);
            }
        });
        jPanel1.add(tf_tuKho);
        tf_tuKho.setBounds(250, 210, 340, 40);

        tf_denKho.setPreferredSize(new java.awt.Dimension(64, 40));
        tf_denKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_denKhoActionPerformed(evt);
            }
        });
        jPanel1.add(tf_denKho);
        tf_denKho.setBounds(250, 270, 340, 40);

        jdc_ngayLapPX.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jPanel1.add(jdc_ngayLapPX);
        jdc_ngayLapPX.setBounds(250, 150, 340, 40);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/jLabel_TaoPhieuXuatKho.png"))); // NOI18N
        jPanel1.add(jLabel16);
        jLabel16.setBounds(340, 10, 740, 84);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/book-stack.png"))); // NOI18N
        jLabel9.setText("Nhập sách");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(900, 90, 190, 36);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("(*)");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(1070, 160, 24, 20);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ISBN");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(1000, 160, 60, 30);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Số lượng");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(970, 214, 90, 30);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("(*)");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(1070, 224, 24, 20);

        tf_isbn.setPreferredSize(new java.awt.Dimension(64, 40));
        tf_isbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_isbnActionPerformed(evt);
            }
        });
        jPanel1.add(tf_isbn);
        tf_isbn.setBounds(1110, 150, 340, 40);

        tf_soLuong.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        tf_soLuong.setPreferredSize(new java.awt.Dimension(64, 40));
        tf_soLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_soLuongActionPerformed(evt);
            }
        });
        jPanel1.add(tf_soLuong);
        tf_soLuong.setBounds(1110, 210, 340, 40);

        btn_them.setBackground(new java.awt.Color(102, 102, 0));
        btn_them.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btn_them.setForeground(new java.awt.Color(255, 255, 255));
        btn_them.setText("Thêm");
        btn_them.setPreferredSize(new java.awt.Dimension(120, 42));
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });
        jPanel1.add(btn_them);
        btn_them.setBounds(1190, 270, 120, 42);

        btn_xoa.setBackground(new java.awt.Color(153, 0, 51));
        btn_xoa.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btn_xoa.setForeground(new java.awt.Color(255, 255, 255));
        btn_xoa.setText("Xóa");
        btn_xoa.setPreferredSize(new java.awt.Dimension(120, 42));
        jPanel1.add(btn_xoa);
        btn_xoa.setBounds(1330, 270, 120, 42);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Chi tiết xuất kho");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(30, 360, 240, 36);

        btn_taoPX.setBackground(new java.awt.Color(102, 102, 0));
        btn_taoPX.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btn_taoPX.setForeground(new java.awt.Color(255, 255, 255));
        btn_taoPX.setText("Tạo phiếu xuất");
        btn_taoPX.setPreferredSize(new java.awt.Dimension(120, 42));
        jPanel1.add(btn_taoPX);
        btn_taoPX.setBounds(1170, 630, 170, 50);

        btn_huy.setBackground(new java.awt.Color(153, 0, 51));
        btn_huy.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        btn_huy.setForeground(new java.awt.Color(255, 255, 255));
        btn_huy.setText("Hủy");
        btn_huy.setPreferredSize(new java.awt.Dimension(120, 42));
        jPanel1.add(btn_huy);
        btn_huy.setBounds(1360, 630, 90, 50);

        tbl_phieuXuatKho.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        tbl_phieuXuatKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "ISBN", "Tên sách", "Loại sách", "Tên kho", "Giá gốc", "Số lượng", "Thành tiền", ""
            }
        ));
        tbl_phieuXuatKho.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbl_phieuXuatKho.setRowHeight(40);
        tbl_phieuXuatKho.setShowGrid(true);
        jScrollPane1.setViewportView(tbl_phieuXuatKho);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 400, 1500, 210);

        jLabel15.setBackground(new java.awt.Color(102, 102, 0));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/anhnen.jpg"))); // NOI18N
        jLabel15.setPreferredSize(new java.awt.Dimension(1612, 733));
        jPanel1.add(jLabel15);
        jLabel15.setBounds(0, 0, 170, 30);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setToolTipText("");
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(650, 160, 72, 22);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_denKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_denKhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_denKhoActionPerformed

    private void tf_isbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_isbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_isbnActionPerformed

    private void tf_soLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_soLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_soLuongActionPerformed

    private void tf_tuKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_tuKhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_tuKhoActionPerformed

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String isbn = tf_isbn.getText();
        String sl = tf_soLuong.getText();

        if (!kiemTraISBNvaSoLuong(isbn, sl)) {
            return; // Nếu dữ liệu không hợp lệ, dừng hàm
        }

        int soLuong = Integer.parseInt(sl);

        // Kiểm tra model
        DefaultTableModel model = (DefaultTableModel) tbl_phieuXuatKho.getModel();

        try {
            // Lấy thông tin sách từ mã ISBN
            Sach sach = sach_dao.getSachTheoMaSach(isbn);

            if (sach != null) {
                String tenSach = sach.getTenSach();
                String loaiSach = sach.getLoaiSach().getTenLoai();
                double giaGoc = sach.getGiaGoc();

                // Kiểm tra xem ISBN đã có trong bảng chưa
                boolean isbnTonTai = false;
                for (int i = 0; i < model.getRowCount(); i++) {
                    String isbnTrongBang = model.getValueAt(i, 1).toString(); // Lấy giá trị ISBN từ cột 1
                    if (isbnTrongBang.equals(isbn)) {
                        // ISBN đã tồn tại, cập nhật số lượng
                        int soLuongCu = Integer.parseInt(model.getValueAt(i, 5).toString()); // Cột 6 là số lượng
                        int soLuongMoiCapNhat = soLuongCu + soLuong;
                        model.setValueAt(soLuongMoiCapNhat, i, 5); // Cập nhật số lượng
                        model.setValueAt(soLuongMoiCapNhat * giaGoc, i, 6); // Cập nhật tổng tiền (cột 7)
                        isbnTonTai = true;
                        break; // Ngừng tìm kiếm sau khi đã cập nhật
                    }
                }

                // Nếu ISBN chưa tồn tại, thêm dòng mới
                if (!isbnTonTai) {
                    // Cập nhật STT
                    int stt = model.getRowCount() + 1;

                    // Thêm hàng mới vào bảng
                    model.addRow(new Object[]{stt, isbn, tenSach, loaiSach, giaGoc, soLuong, giaGoc * soLuong, ""});
                }

                // Xóa các text fields sau khi thêm thành công
                tf_isbn.setText("");
                tf_soLuong.setText("");

                JOptionPane.showMessageDialog(null, "Thêm sách thành công.");
            } else {
                JOptionPane.showMessageDialog(null, "Không tìm thấy sách với ISBN: " + isbn);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi thêm sách: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_huy;
    private javax.swing.JButton btn_taoPX;
    private javax.swing.JButton btn_them;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JButton btn_xoa1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdc_ngayLapPX;
    private javax.swing.JTable tbl_phieuXuatKho;
    private javax.swing.JTextField tf_denKho;
    private javax.swing.JTextField tf_isbn;
    private javax.swing.JTextField tf_soLuong;
    private javax.swing.JTextField tf_tuKho;
    // End of variables declaration//GEN-END:variables
}
